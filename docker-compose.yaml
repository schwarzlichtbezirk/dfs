# Build images by followed commands and run composition:
#    docker build --pull --rm -f "node.dockerfile" -t dfs-node:latest "."
#    docker build --pull --rm -f "front.dockerfile" -t dfs-front:latest "."
#    docker-compose -f "docker-compose.yaml" up -d --build

version: "3.9"

services:

  front-svc:
    image: dfs-front
    #build:
      #context: .
      #dockerfile: front.dockerfile
    depends_on:
      - node-svc1
      - node-svc2
    ports:
      - 8008:8008
      - 8010:8010
    networks:
      dfs-net:
        ipv4_address: 172.20.1.100
        aliases:
          - front
    environment:
      PORTHTTP: :8008;:8010
      NODELIST: node1:50051;node2:50052
    restart: on-failure
    stop_signal: SIGINT
    stop_grace_period: 15s

  node-svc1:
    image: dfs-node
    #build:
      #context: .
      #dockerfile: node.dockerfile
    #ports:
      #- "50051:50051"
    networks:
      dfs-net:
        ipv4_address: 172.20.1.1
        aliases:
          - node1
    environment:
      NODEPORT: "50051"
    restart: on-failure
    stop_signal: SIGINT
    stop_grace_period: 15s

  node-svc2:
    image: dfs-node
    #build:
      #context: .
      #dockerfile: node.dockerfile
    #ports:
      #- "50052:50051"
    networks:
      dfs-net:
        ipv4_address: 172.20.1.2
        aliases:
          - node2
    environment:
      NODEPORT: "50052"
    restart: on-failure
    stop_signal: SIGINT
    stop_grace_period: 15s

networks:
  dfs-net:
    name: dfs-net
    external: false
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
          ip_range: 172.20.1.0/24
          gateway: 172.20.1.254
